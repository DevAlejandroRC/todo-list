{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aleja\\\\OneDrive\\\\Documentos\\\\MyFoldersDev\\\\Courses\\\\TopicsUdemy\\\\todo-list\\\\src\\\\components\\\\ListTodo\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useSelector } from 'react-redux';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport CardTodo from '../CardTodo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListTodo = () => {\n  _s();\n  const todos = useSelector(state => {\n    return state.task;\n  });\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: todos && todos.map(_ref => {\n      let {\n        id,\n        done,\n        date,\n        description\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(CardTodo, {\n          done: done,\n          date: date,\n          description: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(ListTodo, \"yf5/CXitEfCS89mS1QxI4IUHBGo=\", false, function () {\n  return [useSelector];\n});\n_c = ListTodo;\nexport default ListTodo;\nvar _c;\n$RefreshReg$(_c, \"ListTodo\");","map":{"version":3,"names":["useSelector","Col","Row","CardTodo","ListTodo","todos","state","task","map","id","done","date","description"],"sources":["C:/Users/aleja/OneDrive/Documentos/MyFoldersDev/Courses/TopicsUdemy/todo-list/src/components/ListTodo/index.jsx"],"sourcesContent":["import { useSelector } from 'react-redux'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport CardTodo from '../CardTodo'\r\n\r\nconst ListTodo = () => {\r\n\r\n  const todos = useSelector(\r\n    (state) => {\r\n      return state.task\r\n    }\r\n  )\r\n\r\n  return (\r\n    <Row>\r\n      {todos && todos.map( ({id, done, date, description}) => (\r\n        <Col key={id}>\r\n          <CardTodo done={done} date={date} description={description} />\r\n        </Col>\r\n      ) )}        \r\n    </Row>\r\n  )  \r\n}\r\n\r\nexport default ListTodo"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,QAAQ,MAAM,aAAa;AAAA;AAElC,MAAMC,QAAQ,GAAG,MAAM;EAAA;EAErB,MAAMC,KAAK,GAAGL,WAAW,CACtBM,KAAK,IAAK;IACT,OAAOA,KAAK,CAACC,IAAI;EACnB,CAAC,CACF;EAED,oBACE,QAAC,GAAG;IAAA,UACDF,KAAK,IAAIA,KAAK,CAACG,GAAG,CAAE;MAAA,IAAC;QAACC,EAAE;QAAEC,IAAI;QAAEC,IAAI;QAAEC;MAAW,CAAC;MAAA,oBACjD,QAAC,GAAG;QAAA,uBACF,QAAC,QAAQ;UAAC,IAAI,EAAEF,IAAK;UAAC,IAAI,EAAEC,IAAK;UAAC,WAAW,EAAEC;QAAY;UAAA;UAAA;UAAA;QAAA;MAAG,GADtDH,EAAE;QAAA;QAAA;QAAA;MAAA,QAEN;IAAA,CACP;EAAE;IAAA;IAAA;IAAA;EAAA,QACC;AAEV,CAAC;AAAA,GAjBKL,QAAQ;EAAA,QAEEJ,WAAW;AAAA;AAAA,KAFrBI,QAAQ;AAmBd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}