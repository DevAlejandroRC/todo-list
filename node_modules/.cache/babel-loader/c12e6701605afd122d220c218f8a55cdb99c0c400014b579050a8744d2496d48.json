{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Documents\\\\MyFoldersDev\\\\Courses\\\\TopicsUdemy\\\\todo-list\\\\src\\\\components\\\\TodoList\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useCallback } from 'react';\nimport TodoItem from '../TodoItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = _ref => {\n  _s();\n  let {\n    list,\n    removeItem\n  } = _ref;\n  const dispatch = useDispatch();\n  const items = useSelector(state => state.items);\n  const onClickRemove = useCallback(item => {\n    // Acción de eliminar un item \n    console.log(\"Borrando item\", item);\n    // removeItem(item)\n    dispatch({\n      type: 'REMOVE_ITEM',\n      payload: item\n    });\n  }, [removeItem]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: items && items.map(i => /*#__PURE__*/_jsxDEV(TodoItem, {\n      ...i,\n      onClickRemove: onClickRemove\n    }, i.item, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 38\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n/*\r\nconst mapStateToProps = state => {\r\n    return {\r\n        list: state.items\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        removeItem: value => dispatch({type: 'REMOVE_ITEM', payload: value})\r\n    }\r\n}\r\n*/\n// export default connect(mapStateToProps, mapDispatchToProps)(TodoList)\n_s(TodoList, \"XiNypVNvGwSPMBUQTi8cLxCLmfI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useCallback","TodoItem","useDispatch","useSelector","TodoList","list","removeItem","dispatch","items","state","onClickRemove","item","console","log","type","payload","map","i"],"sources":["C:/Users/Acer/Documents/MyFoldersDev/Courses/TopicsUdemy/todo-list/src/components/TodoList/index.jsx"],"sourcesContent":["import { useCallback } from 'react'\r\nimport TodoItem from '../TodoItem'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst TodoList = ({ list, removeItem }) => {\r\n    const dispatch = useDispatch()\r\n    const items = useSelector(state => state.items)\r\n\r\n    const onClickRemove = useCallback((item) => {\r\n        // Acción de eliminar un item \r\n        console.log(\"Borrando item\", item)\r\n        // removeItem(item)\r\n        dispatch({type: 'REMOVE_ITEM', payload: item})\r\n    }, [removeItem])\r\n    \r\n    return (\r\n        <div>\r\n            {items && items.map(i => <TodoItem key={i.item} {...i} onClickRemove={onClickRemove}></TodoItem>)}\r\n        </div>\r\n    )\r\n}\r\n/*\r\nconst mapStateToProps = state => {\r\n    return {\r\n        list: state.items\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        removeItem: value => dispatch({type: 'REMOVE_ITEM', payload: value})\r\n    }\r\n}\r\n*/\r\n// export default connect(mapStateToProps, mapDispatchToProps)(TodoList)\r\nexport default TodoList\r\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAOC,QAAQ,MAAM,aAAa;AAClC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAAA;AAEtD,MAAMC,QAAQ,GAAG,QAA0B;EAAA;EAAA,IAAzB;IAAEC,IAAI;IAAEC;EAAW,CAAC;EAClC,MAAMC,QAAQ,GAAGL,WAAW,EAAE;EAC9B,MAAMM,KAAK,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,KAAK,CAAC;EAE/C,MAAME,aAAa,GAAGV,WAAW,CAAEW,IAAI,IAAK;IACxC;IACAC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAAC;IAClC;IACAJ,QAAQ,CAAC;MAACO,IAAI,EAAE,aAAa;MAAEC,OAAO,EAAEJ;IAAI,CAAC,CAAC;EAClD,CAAC,EAAE,CAACL,UAAU,CAAC,CAAC;EAEhB,oBACI;IAAA,UACKE,KAAK,IAAIA,KAAK,CAACQ,GAAG,CAACC,CAAC,iBAAI,QAAC,QAAQ;MAAA,GAAkBA,CAAC;MAAE,aAAa,EAAEP;IAAc,GAA5CO,CAAC,CAACN,IAAI;MAAA;MAAA;MAAA;IAAA,QAAkD;EAAC;IAAA;IAAA;IAAA;EAAA,QAC/F;AAEd,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,GA9BMP,QAAQ;EAAA,QACOF,WAAW,EACdC,WAAW;AAAA;AAAA,KAFvBC,QAAQ;AA+Bd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}