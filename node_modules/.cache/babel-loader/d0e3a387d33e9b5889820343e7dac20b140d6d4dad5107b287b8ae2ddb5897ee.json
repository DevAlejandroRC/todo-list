{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aleja\\\\OneDrive\\\\Documentos\\\\MyFoldersDev\\\\Courses\\\\TopicsUdemy\\\\todo-list\\\\src\\\\components\\\\ListTodo\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useSelector } from 'react-redux';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport CardTodo from '../CardTodo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListTodo = () => {\n  _s();\n  const todos = useSelector(state => state.todo.todos);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: count > 0 && todos.map(task => /*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(CardTodo, {\n        id: task.id,\n        done: task.done,\n        date: task.date,\n        description: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 15\n      }, this)\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(ListTodo, \"yf5/CXitEfCS89mS1QxI4IUHBGo=\", false, function () {\n  return [useSelector];\n});\n_c = ListTodo;\nexport default ListTodo;\nvar _c;\n$RefreshReg$(_c, \"ListTodo\");","map":{"version":3,"names":["useSelector","Col","Row","CardTodo","ListTodo","todos","state","todo","count","map","task","id","done","date","description"],"sources":["C:/Users/aleja/OneDrive/Documentos/MyFoldersDev/Courses/TopicsUdemy/todo-list/src/components/ListTodo/index.jsx"],"sourcesContent":["import { useSelector } from 'react-redux'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport CardTodo from '../CardTodo'\r\n\r\nconst ListTodo = () => {\r\n\r\n  const todos = useSelector( (state) => state.todo.todos )\r\n\r\n  return (\r\n    <Row>\r\n      {\r\n        count > 0 && todos.map(\r\n          (task) => (\r\n            <Col key={task.id} >\r\n              <CardTodo id={task.id} done={task.done} date={task.date} description={task.description}/>\r\n            </Col>\r\n          ) \r\n        )\r\n      }\r\n    </Row>\r\n  )  \r\n}\r\n\r\nexport default ListTodo"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,QAAQ,MAAM,aAAa;AAAA;AAElC,MAAMC,QAAQ,GAAG,MAAM;EAAA;EAErB,MAAMC,KAAK,GAAGL,WAAW,CAAGM,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACF,KAAK,CAAE;EAExD,oBACE,QAAC,GAAG;IAAA,UAEAG,KAAK,GAAG,CAAC,IAAIH,KAAK,CAACI,GAAG,CACnBC,IAAI,iBACH,QAAC,GAAG;MAAA,uBACF,QAAC,QAAQ;QAAC,EAAE,EAAEA,IAAI,CAACC,EAAG;QAAC,IAAI,EAAED,IAAI,CAACE,IAAK;QAAC,IAAI,EAAEF,IAAI,CAACG,IAAK;QAAC,WAAW,EAAEH,IAAI,CAACI;MAAY;QAAA;QAAA;QAAA;MAAA;IAAE,GADjFJ,IAAI,CAACC,EAAE;MAAA;MAAA;MAAA;IAAA,QAGlB;EACF;IAAA;IAAA;IAAA;EAAA,QAEC;AAEV,CAAC;AAAA,GAjBKP,QAAQ;EAAA,QAEEJ,WAAW;AAAA;AAAA,KAFrBI,QAAQ;AAmBd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}